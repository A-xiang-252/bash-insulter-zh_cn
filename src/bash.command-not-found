print_message () {

    local messages
    local message

    messages=(
        "Boooo!"
        "Don't you know anything?什么都不知道吗?"
        "RTFM!请阅读愚蠢的使用手册!"
        "Haha, n00b!哈哈,新手!"
        "Wow! That was impressively wrong!哇!这大错特错!"
        "Pathetic令人悲伤的"
        "The worst one today!今天最糟糕的一个!"
        "n00b alert!新手 注意!"
        "Your application for reduced salary has been sent!你的减薪申请已经寄出!"
        "lol大声笑Laugh Out Loud"
        "lol... plz请...大声笑Laugh Out Loud"
        "plz uninstall请卸载"
        "And the Darwin Award goes to.... ${USER}!达尔文奖的获得者是...${USER}"
        "ERROR_INCOMPETENT_USER错误_没有能力的_用户"
        "Incompetence is also a form of competence无能也是一种能力"
        "Bad.糟糕"
        "Fake it till you make it!假装直到你成功!"
        "What is this...? Amateur hour!?这是什么...?业余时间!?"
        "Come on! You can do it!来吧!你能做到的!"
        "Nice try.做的不错."
        "What if... you type an actual command the next time!如果……下次输入一个真实的命令!"
        "What if I told you... it is possible to type valid commands.如果我告诉你…可以输入有效的命令."
        "Y u no speak computer???你不会对电脑讲话???"
        "This is not Windows.这不是Windows."
        "Perhaps you should leave the command line alone...也许你需要独自的离开命令行..."
        "Please step away from the keyboard!请逃离键盘!"
        "Pro tip: type a valid command!专业提示:输入有效的命令!"
        "Go outside.出去."
        "This is not a search engine.这不是搜索引擎."
        "(╯°□°）╯︵ ┻━┻"
        "¯\\_(ツ)_/¯"
        "Why are you so stupid?!为什么你如此愚蠢?!"
        "Perhaps computers is not for you...也许电脑不适合你..."
        "Why are you doing this to me?!你为什么要这样对我?!"
        "Don't you have anything better to do?!你没别的事可做了吗?!"
        "This is why nobody likes you.这就是为什么没人喜欢你?"
        "Are you even trying?!你到底有没有努力去试呀?!"
        "Try using your brain the next time!下次试着动动脑子!"
        "My keyboard is not a touch screen!我的键盘不是触摸屏!"
        "Commands, random gibberish, who cares!命令，随机的胡言乱语，谁关心!"
        "Typing incorrect commands, eh?输入错误的命令，eh?"
        "Are you always this stupid or are you making a special effort today?!你总是这么笨吗，还是你今天特别努力了?!"
        "Brains aren't everything. In your case they're nothing.大脑并不是一切.对你来说，他什么都不是."
        "I don't know what makes you so stupid, but it really works.我不知道你为什么这么蠢，但真的很管用."
        "You are not as bad as people say, you are much, much worse.你不想人们说的那样糟糕，你是更更更糟糕."
        "If what you don't know can't hurt you, you're invulnerable.如果你不知道的东西不会伤害你，那你就是无懈可击的."
        "If ignorance is bliss, you must be the happiest person on earth.如果无知是福，你一定是世界上最幸福的人."
        "You're proof that god has a sense of humor.你就是上帝有幽默感的证明."
        "Keep trying, someday you'll do something intelligent!继续努力，总有一天你会做一些聪明的事!"
        "If shit was music, you'd be an orchestra.如果shi是音乐，你会成为一个乐队."
        "Thanks for the help谢谢你的帮助"
        "Awesome真棒"
        "You need some time.你需要一些时间."
        "Good luck!祝你好运!"
        "I think that was my fault.我想这是我的错."
        "Joker小丑,滑稽的人"
        "Clown小丑,滑稽的人"
        "You are a funny man.你真是个有趣的人."
    )

    # If CMD_NOT_FOUND_MSGS array is populated use those messages instead of the defaults
    [[ -n ${CMD_NOT_FOUND_MSGS} ]] && messages=( "${CMD_NOT_FOUND_MSGS[@]}" )

    # If CMD_NOT_FOUND_MSGS_APPEND array is populated append those to the existing messages
    [[ -n ${CMD_NOT_FOUND_MSGS_APPEND} ]] && messages+=( "${CMD_NOT_FOUND_MSGS_APPEND[@]}" )

    # Seed RANDOM with an integer of some length
    RANDOM=$(od -vAn -N4 -tu < /dev/urandom)

    # Print a randomly selected message, but only about half the time to annoy the user a
    # little bit less.
    if [[ $((${RANDOM} % 2)) -lt 1 ]]; then
        message=${messages[${RANDOM} % ${#messages[@]}]}
        printf "\\n  %s\\n\\n" "$(tput bold)$(tput setaf 1)${message}$(tput sgr0)" >&2
    fi
}

function_exists () {
    # Zsh returns 0 even on non existing functions with -F so use -f
    declare -f $1 > /dev/null
    return $?
}

#
# The idea below is to copy any existing handlers to another function
# name and insert the message in front of the old handler in the
# new handler. By default, neither bash or zsh has has a handler function
# defined, so the default behaviour is replicated.
#
# Also, ensure the handler is only copied once. If we do not ensure this
# the handler would add itself recursively if this file happens to be
# sourced multiple times in the same shell, resulting in a neverending
# stream of messages.
#

#
# Zsh
#
if function_exists command_not_found_handler; then
    if ! function_exists orig_command_not_found_handler; then
        eval "orig_$(declare -f command_not_found_handler)"
    fi
else
    orig_command_not_found_handler () {
        printf "zsh: command not found: %s\\n" "$1" >&2
        return 127
    }
fi

command_not_found_handler () {
    print_message
    orig_command_not_found_handler "$@"
}


#
# Bash
#
if function_exists command_not_found_handle; then
    if ! function_exists orig_command_not_found_handle; then
        eval "orig_$(declare -f command_not_found_handle)"
    fi
else
    orig_command_not_found_handle () {
        printf "%s: %s: command not found\\n" "$0" "$1" >&2
        return 127
    }
fi

command_not_found_handle () {
    print_message
    orig_command_not_found_handle "$@"
}
